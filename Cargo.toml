[package]
name = "neumann"
version = "0.1.0"
authors = ["Raimundo Saona <rasa200@gmail.com>"]
edition = "2018"
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/saona-raimundo/neumann"
documentation = "https://docs.rs/neumann"
homepage = "https://crates.io/crates/neumann"
description = """
Game Theory algorithms in Rust.
"""
keywords = ["math", "mathematics"]
categories = ["algorithms", "science", "mathematics"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# itertools = "0.9.0"
# num-rational = "0.3.0"
asking = { version = "0.0.2", optional = true }
minilp = "0.2.2"
nalgebra = { version = "0.29.0", features = ["serde-serialize"] }
ndarray = { version = "0.15.3", optional = true }
rand_distr = { version = "0.4.1", optional = true }
rand = { version = "0.8.4", optional = true }
thiserror = "1.0.26"
num-traits = "0.2.14"
# pyo3 = "0.13.2"
# pythonize = "0.13.0"

[features]
play = ["asking", "rand_distr", "rand"]
interoperability = ["ndarray"]



[dev-dependencies]
test-case = "1.2.0"
approx = "0.3.2"
preexplorer = "0.3.2"
neumann = { path = ".", features = ["interoperability", "play"] }
